(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{300:function(t,a,s){t.exports=s.p+"assets/img/css_z-index.bf758b5e.png"},301:function(t,a,s){t.exports=s.p+"assets/img/css_img_baseline.53948107.png"},374:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),e("h2",{attrs:{id:"bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),e("blockquote",[e("p",[t._v("块格式化上下文（Block Formatting Context，BFC） 是 Web 页面的可视化 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。")])]),t._v(" "),e("p",[t._v("具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。")]),t._v(" "),e("h3",{attrs:{id:"_1-如何形成-bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何形成-bfc","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 如何形成 BFC")]),t._v(" "),e("p",[t._v("只要元素满足下面任一条件即可触发 BFC 特性:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("根元素("),e("code",[t._v("<html>")]),t._v(")")])]),t._v(" "),e("li",[e("strong",[t._v("浮动元素（元素的 float 不是 none）")])]),t._v(" "),e("li",[e("strong",[t._v("绝对定位元素（元素的 position 为 absolute 或 fixed）")])]),t._v(" "),e("li",[e("strong",[t._v("overflow 值不为 visible 的块元素(hidden、auto、scroll)")])]),t._v(" "),e("li",[t._v("contain 值为 layout、content 或 paint 的元素")]),t._v(" "),e("li",[t._v("弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）")]),t._v(" "),e("li",[t._v("网格元素（display 为 grid 或 inline-grid 元素的直接子元素）")]),t._v(" "),e("li",[t._v("多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1）")]),t._v(" "),e("li",[t._v("column-span 为 all 的元素始终会创建一个新的 BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）")]),t._v(" "),e("li",[t._v("display\n"),e("ul",[e("li",[t._v("行内块元素（元素的 display 为 inline-block）")]),t._v(" "),e("li",[t._v("表格单元格（元素的 display 为 table-cell，HTML 表格单元格默认为该值）")]),t._v(" "),e("li",[t._v("表格标题（元素的 display 为 table-caption，HTML 表格标题默认为该值）")]),t._v(" "),e("li",[t._v("匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、\ntable-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）")]),t._v(" "),e("li",[t._v("display 值为 flow-root 的元素")])])])]),t._v(" "),e("h3",{attrs:{id:"_2-bfc-的原理-bfc-的布局规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-bfc-的原理-bfc-的布局规则","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. BFC 的原理/BFC 的布局规则")]),t._v(" "),e("ul",[e("li",[t._v("BFC 内部的子元素，在垂直方向，边距会发生重叠")]),t._v(" "),e("li",[t._v("BFC 在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然")]),t._v(" "),e("li",[t._v("BFC 区域不与旁边的 float box 区域重叠")]),t._v(" "),e("li",[t._v("计算 BFC 的高度时，浮动的子元素也参与计算")]),t._v(" "),e("li",[t._v("文字层不会被浮动层覆盖，环绕于周围")])]),t._v(" "),e("h3",{attrs:{id:"_3-bfc-的原理应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-bfc-的原理应用","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. BFC 的原理应用")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("阻止 margin 重叠：由于 BFC 是一个独立的区域，内部的元素和外部的元素互不影响，将两个元素变为两个 BFC，就解决了 margin 重叠的问题")])]),t._v(" "),e("li",[e("p",[t._v("可以包含浮动元素——清除内部浮动（清除浮动的原理时两个 div 都位于同一个 BFC 区域之中）")])]),t._v(" "),e("li",[e("p",[t._v("可以阻止元素被浮动元素覆盖/解决高度塌陷：在对子元素设置浮动后，父元素会发生高度塌陷，也就是父元素的高度变为 0。解决这个问题，只需要把父元素变成一个 BFC。常用的办法是给父元素设置overflow:hidden")])]),t._v(" "),e("li",[e("p",[t._v("自适应两栏布局")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('  .left{\n    width: 100px;\n    height: 200px;\n    background: red;\n    float: left;\n}\n\n.right{\n    height: 300px;\n    background: blue;\n    overflow: hidden;\n}\n\n  <div class="left"></div>\n  <div class="right"></div>\n')])])]),e("p",[t._v("左侧设置float:left，右侧设置overflow: hidden。这样右边就触发了 BFC，BFC 的区域不会与浮动元素发生重叠，所以两侧就不会发生重叠，实现了自适应两栏布局。")])])]),t._v(" "),e("h2",{attrs:{id:"margin-重叠问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠问题","aria-hidden":"true"}},[t._v("#")]),t._v(" margin 重叠问题")]),t._v(" "),e("h3",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),e("p",[t._v("两个块级元素的上外边距和下外边距可能会合并（折叠）为一个外边距，其大小会取其中外边距值大的那个，这种行为就是外边距折叠。需要注意的是，浮动的元素和绝对定位这种脱离文档流的元素的外边距不会折叠。重叠只会出现在垂直方向。")]),t._v(" "),e("h3",{attrs:{id:"计算原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算原则","aria-hidden":"true"}},[t._v("#")]),t._v(" 计算原则")]),t._v(" "),e("p",[t._v("折叠合并后外边距的计算原则如下：")]),t._v(" "),e("ul",[e("li",[t._v("如果两者都是正数，那么就去最大者")]),t._v(" "),e("li",[t._v("如果是一正一负，就会正值减去负值的绝对值")]),t._v(" "),e("li",[t._v("两个都是负值时，用 0 减去两个中绝对值大的那个")])]),t._v(" "),e("h3",{attrs:{id:"解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决","aria-hidden":"true"}},[t._v("#")]),t._v(" 解决")]),t._v(" "),e("ol",[e("li",[t._v("兄弟之间重叠\n"),e("ol",[e("li",[t._v("底部元素变为行内盒子 display: inline-block")]),t._v(" "),e("li",[t._v("底部元素设置浮动 float")]),t._v(" "),e("li",[t._v("底部元素的 position 的值为 absolute/fixed")])])]),t._v(" "),e("li",[t._v("父子之间重叠\n"),e("ol",[e("li",[t._v("父元素加入 overflow:hidden")]),t._v(" "),e("li",[t._v("父元素添加透明边框 border:1px solid transparent")]),t._v(" "),e("li",[t._v("子元素变为行内盒子 display: inline-block")]),t._v(" "),e("li",[t._v("子元素加入浮动属性或定位")])])])]),t._v(" "),e("h2",{attrs:{id:"css-性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" css 性能优化")]),t._v(" "),e("p",[t._v("原文："),e("a",{attrs:{href:"https://juejin.im/post/5b6133a351882519d346853f?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 性能优化的 8 个技巧"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"_1-内联首屏关键-css-critical-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-内联首屏关键-css-critical-css","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 内联首屏关键 css(critical css)")]),t._v(" "),e("h3",{attrs:{id:"_2-异步加载-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-异步加载-css","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 异步加载 css")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("使用 JavaScript 动态创建样式表 link 元素，并插入到 DOM 中")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建link标签")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myCSS "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"link"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyCSS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylesheet"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyCSS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mystyles.css"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入到header的最后位置")]),t._v("\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  myCSS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v('将 link 元素的 media 属性设置为用户浏览器不匹配的媒体类型（或媒体查询），如 media="print"，甚至可以是完全不存在的类型 media="noexist"。对浏览器来说，如果样式表不适用于当前媒体类型，其优先级会被放低，会在不阻塞页面渲染的情况下再进行下载')]),t._v(" "),e("p",[t._v("在 css 文件中使用"),e("code",[t._v("@media")]),t._v("也可以达到异步加载的效果，例如"),e("code",[t._v("background-image")]),t._v("根据媒体查询加载不同的图片")])]),t._v(" "),e("li",[e("p",[e("code",[t._v('rel="preload"')]),t._v("这一 Web 标准指出了如何异步加载资源，包括 CSS 类资源")]),t._v(" "),e("p",[e("code",[t._v("<link>")]),t._v(" 元素的 rel 属性的属性值 preload 能够让你在你的 HTML 页面中 "),e("code",[t._v("<head>")]),t._v("元素内部书写一些声明式的资源获取请求，可以指明哪些资源是在页面加载完成后即刻需要的。对于这种即刻需要的资源，你可能希望在页面加载的生命周期的早期阶段就开始获取，在浏览器的主渲染机制介入前就进行预加载。这一机制使得资源可以更早的得到加载并可用，且更不易阻塞页面的初步渲染，进而提升性能")])])]),t._v(" "),e("h3",{attrs:{id:"_3-文件压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-文件压缩","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 文件压缩")]),t._v(" "),e("p",[t._v("文件的大小会直接影响浏览器的加载速度，这一点在网络较差时表现地尤为明显。相信大家都早已习惯对 CSS 进行压缩，现在的构建工具，如 webpack、gulp/grunt、rollup 等也都支持 CSS 压缩功能。压缩后的文件能够明显减小，可以大大降低了浏览器的加载时间。")]),t._v(" "),e("p",[t._v("webpack 中可以使用\n"),e("code",[t._v("mini-css-extract-plugin")]),t._v("插件导出 css\n"),e("code",[t._v("optimize-css-assets-webpack-plugin")]),t._v("压缩代码")]),t._v(" "),e("h3",{attrs:{id:"_4-删除无用-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除无用-css","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 删除无用 css")]),t._v(" "),e("p",[t._v("找到并删除代码中无用的 css，可以借助"),e("code",[t._v("Uncss")]),t._v("库来实现自动删除")]),t._v(" "),e("h3",{attrs:{id:"_5-有选择地使用选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-有选择地使用选择器","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 有选择地使用选择器")]),t._v(" "),e("ol",[e("li",[t._v("保持简单，不要使用嵌套过多过于复杂的选择器")]),t._v(" "),e("li",[t._v("通配符和属性选择器效率最低，需要匹配的元素最多，尽量避免使用")]),t._v(" "),e("li",[t._v("不要使用类选择器的 ID 选择器修饰元素标签")]),t._v(" "),e("li",[t._v("不要为了追求速度而放弃可读性和可维护性")])]),t._v(" "),e("h3",{attrs:{id:"_6-减少使用昂贵的属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-减少使用昂贵的属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 减少使用昂贵的属性")]),t._v(" "),e("p",[t._v("在浏览器绘制屏幕时，所有需要浏览器进行操作或计算的属性相对而言都需要花费更大的代价。当页面发生重绘时，它们会降低浏览器的渲染性能。所以在编写 CSS 时，我们应该尽量减少使用昂贵属性，如"),e("code",[t._v("box-shadow")]),t._v("/"),e("code",[t._v("border-radius")]),t._v("/"),e("code",[t._v("filter")]),t._v("/"),e("code",[t._v("透明度")]),t._v("/"),e("code",[t._v(":nth-child")]),t._v("等")]),t._v(" "),e("h3",{attrs:{id:"_7-优化重排-回流-reflow-和重绘-repaint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-优化重排-回流-reflow-和重绘-repaint","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 优化重排/回流(reflow)和重绘(repaint)")]),t._v(" "),e("h4",{attrs:{id:"导致重排-回流的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导致重排-回流的操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 导致重排/回流的操作")]),t._v(" "),e("ol",[e("li",[t._v("调整窗口大小")]),t._v(" "),e("li",[t._v("改变字体大小")]),t._v(" "),e("li",[t._v("样式表变动")]),t._v(" "),e("li",[t._v("元素内容变化，尤其是输入控件")]),t._v(" "),e("li",[t._v("CSS 伪类激活")]),t._v(" "),e("li",[t._v("DOM 操作")]),t._v(" "),e("li",[t._v("DOM 元素的几何属性的获取， 会使浏览器将渐进回流队列 Flush，立即执行回流。")])]),t._v(" "),e("h4",{attrs:{id:"一些常用且会导致回流的属性和方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些常用且会导致回流的属性和方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 一些常用且会导致回流的属性和方法")]),t._v(" "),e("ul",[e("li",[t._v("clientWidth、clientHeight、clientTop、clientLeft")]),t._v(" "),e("li",[t._v("offsetWidth、offsetHeight、offsetTop、offsetLeft")]),t._v(" "),e("li",[t._v("scrollWidth、scrollHeight、scrollTop、scrollLeft")]),t._v(" "),e("li",[t._v("scrollIntoView()、scrollIntoViewIfNeeded()")]),t._v(" "),e("li",[t._v("getComputedStyle()")]),t._v(" "),e("li",[t._v("getBoundingClientRect()")]),t._v(" "),e("li",[t._v("scrollTo()")])]),t._v(" "),e("h4",{attrs:{id:"导致重绘的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导致重绘的操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 导致重绘的操作")]),t._v(" "),e("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等）")]),t._v(" "),e("h4",{attrs:{id:"避免频繁触发重排-回流的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#避免频繁触发重排-回流的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 避免频繁触发重排/回流的方法")]),t._v(" "),e("p",[t._v("CSS")]),t._v(" "),e("ul",[e("li",[t._v("避免使用 table 布局。")]),t._v(" "),e("li",[t._v("尽可能在 DOM 树的最末端改变 class。")]),t._v(" "),e("li",[t._v("避免设置多层内联样式。")]),t._v(" "),e("li",[t._v("将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。")]),t._v(" "),e("li",[t._v("避免使用 CSS 表达式（例如：calc()）")])]),t._v(" "),e("p",[t._v("JS")]),t._v(" "),e("ul",[e("li",[t._v("避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。")]),t._v(" "),e("li",[t._v("避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。")]),t._v(" "),e("li",[t._v("也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。")]),t._v(" "),e("li",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")]),t._v(" "),e("li",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])]),t._v(" "),e("p",[t._v("浏览器针对页面的回流与重绘，进行了自身的优化——渲染队列")]),t._v(" "),e("p",[t._v("浏览器会将所有的回流、重绘的操作放在一个队列中，当队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会对队列进行批处理。这样就会让多次的回流、重绘变成一次回流重绘")]),t._v(" "),e("p",[t._v("上面，将多个读操作（或者写操作）放在一起，就会等所有的读操作进入队列之后执行，这样，原本应该是触发多次回流，变成了只触发一次回流。")]),t._v(" "),e("h4",{attrs:{id:"优化动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化动画","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化动画")]),t._v(" "),e("p",[t._v("对于如何优化动画，我们知道，一般情况下，动画需要频繁的操作DOM，就就会导致页面的性能问题，我们可以将动画的position属性设置为absolute或者fixed，将动画脱离文档流，这样他的回流就不会影响到页面了。")]),t._v(" "),e("h3",{attrs:{id:"_4-不要使用-import"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-不要使用-import","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 不要使用@import")]),t._v(" "),e("p",[t._v("原因：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("使用@import 引入 css 会影响浏览器的并行下载。使用@import 引用的 css 闻不见只有在引用它的那个 css 文件被下载、解析之后，浏览器才会知道还有另外一个 css 需要下载，这时才去下载，然后下载后开始解析、构建 render 树等一系列操作。这就导致浏览器无法并行下载所需的样式文件")])]),t._v(" "),e("li",[e("p",[t._v("多个@import 会导致下载顺序混乱。在 IE 中，@import 会引发资源文件的下载顺序被打乱，即排列在@import 后面的 js 文件先于@import 下载，并且打乱甚至破坏@import 自身的并行下载")])])]),t._v(" "),e("h2",{attrs:{id:"link-和-import-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link-和-import-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" link 和@import 的区别")]),t._v(" "),e("ul",[e("li",[t._v("link 属于 XHTML 标签，而@import 是 CSS 提供的。")]),t._v(" "),e("li",[t._v("页面被加载时，link 会同时被加载，而@import 引用的 CSS 会等到页面被加载完再加载。")]),t._v(" "),e("li",[t._v("@import 只在 IE 5 以上才能识别，而 link 是 XHTML 标签，无兼容问题。")]),t._v(" "),e("li",[t._v("link 方式的样式权重高于@import 的权重。")]),t._v(" "),e("li",[t._v("使用 dom 控制样式时的差别。当使用 javascript 控制 dom 去改变样式的时候，只能使用 link 标签，因为@import 不是 dom 可以控制的")])]),t._v(" "),e("h2",{attrs:{id:"居中布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#居中布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 居中布局")]),t._v(" "),e("p",[t._v("水平居中：")]),t._v(" "),e("ul",[e("li",[t._v("行内元素： text-align: center")]),t._v(" "),e("li",[t._v("块级元素： margin: 0 auto")]),t._v(" "),e("li",[t._v("absolute + transform（不需知道元素宽度）/ 负 margin（需知道元素宽度）")]),t._v(" "),e("li",[t._v("flex + justify-content: center")])]),t._v(" "),e("p",[t._v("垂直居中：")]),t._v(" "),e("ul",[e("li",[t._v("line-height: height")]),t._v(" "),e("li",[t._v("absolute + transform（不需知道元素宽度）/ 负 margin（需知道元素宽度）")]),t._v(" "),e("li",[t._v("flex + align-items: center")]),t._v(" "),e("li",[t._v("table")])]),t._v(" "),e("p",[t._v("水平垂直居中：")]),t._v(" "),e("ul",[e("li",[t._v("absolute + transform（不需知道元素宽度）/ 负 margin（需知道元素宽度）")]),t._v(" "),e("li",[t._v("flex + justify-content + align-items")])]),t._v(" "),e("h2",{attrs:{id:"选择器优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择器优先级","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择器优先级")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("选择器")]),t._v(" "),e("th",[t._v("格式")]),t._v(" "),e("th",[t._v("优先级权重")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("id 选择器")]),t._v(" "),e("td",[t._v("#id")]),t._v(" "),e("td",[t._v("100")])]),t._v(" "),e("tr",[e("td",[t._v("类选择器")]),t._v(" "),e("td",[t._v(".classname")]),t._v(" "),e("td",[t._v("10")])]),t._v(" "),e("tr",[e("td",[t._v("属性选择器")]),t._v(" "),e("td",[t._v("a[ref='e']")]),t._v(" "),e("td",[t._v("10")])]),t._v(" "),e("tr",[e("td",[t._v("伪类选择器")]),t._v(" "),e("td",[t._v("li:last-child")]),t._v(" "),e("td",[t._v("10")])]),t._v(" "),e("tr",[e("td",[t._v("标签选择器")]),t._v(" "),e("td",[t._v("div")]),t._v(" "),e("td",[t._v("1")])]),t._v(" "),e("tr",[e("td",[t._v("伪元素选择器")]),t._v(" "),e("td",[t._v("li:after")]),t._v(" "),e("td",[t._v("1")])]),t._v(" "),e("tr",[e("td",[t._v("相邻兄弟选择器")]),t._v(" "),e("td",[t._v("h1+p")]),t._v(" "),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[t._v("子选择器")]),t._v(" "),e("td",[t._v("ul>li")]),t._v(" "),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[t._v("后代选择器")]),t._v(" "),e("td",[t._v("li a")]),t._v(" "),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[t._v("通配符选择器")]),t._v(" "),e("td",[t._v("*")]),t._v(" "),e("td",[t._v("0")])])])]),t._v(" "),e("p",[t._v("对于选择器的优先级：")]),t._v(" "),e("ul",[e("li",[t._v("标签选择器、伪元素选择器：1")]),t._v(" "),e("li",[t._v("类选择器、伪类选择器、属性选择器：10")]),t._v(" "),e("li",[t._v("id 选择器：100")]),t._v(" "),e("li",[t._v("内联样式：1000")])]),t._v(" "),e("p",[t._v("注意事项：")]),t._v(" "),e("ul",[e("li",[t._v("!important 声明的样式的优先级最高")]),t._v(" "),e("li",[t._v("如果优先级相同，则最后出现的样式生效")]),t._v(" "),e("li",[t._v("继承得到的样式的优先级最低")]),t._v(" "),e("li",[t._v("通用选择器（*）、子选择器（>）和相邻同胞选择器（+）并不在这四个等级中，所以它们的权值都为 0 ；")]),t._v(" "),e("li",[t._v("样式表的来源不同时，优先级顺序为：内联样式 > 内部样式 > 外部样式 > 浏览器用户自定义样式 > 浏览器默认样式。")])]),t._v(" "),e("h2",{attrs:{id:"伪元素和伪类的区别和作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素和伪类的区别和作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 伪元素和伪类的区别和作用")]),t._v(" "),e("ul",[e("li",[t._v("伪元素： 在内容元素的前后插入额外的元素或样式，但是这些元素实际上并不在文档中生成。它们只在外部显示可见，但不会在文档的源代码中找到它们，因此，称为“伪”元素。例如：")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::before")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一章："')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::after")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hot!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::first-line")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::first-letter")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("30px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("伪类：将特殊的效果添加到特定选择器上。它是已有元素上添加类别的，不会产生新的元素。例如：")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a:hover")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #FF00FF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:first-child")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("总结：伪类是通过在元素选择器上加⼊伪类改变元素状态，⽽伪元素通过对元素的操作进⾏对元素的改变。")])]),t._v(" "),e("p",[e("code",[t._v("!important")]),t._v("例外规则")]),t._v(" "),e("p",[t._v("当在一个样式声明中使用一个"),e("code",[t._v("!important")]),t._v("规则时，此声明将覆盖任何其他声明。虽然，从技术上讲，!important 与优先级无关，但它与最终的结果直接相关。\n使用"),e("code",[t._v("!important")]),t._v("是一个坏习惯，应该尽量避免，因为这破坏了样式表中的固有的级联规则 使得调试找 bug 变得更加困难了。当两条相互冲突的带有"),e("code",[t._v("!important")]),t._v("规则的声明被应用到相同的元素上时，拥有更大优先级的声明将会被采用。")]),t._v(" "),e("h2",{attrs:{id:"display-的属性及其作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display-的属性及其作用","aria-hidden":"true"}},[t._v("#")]),t._v(" display 的属性及其作用")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("作用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("none")]),t._v(" "),e("td",[t._v("元素不显示，并且会从文档流中移除。｜")])]),t._v(" "),e("tr",[e("td",[t._v("block")]),t._v(" "),e("td",[t._v("块类型。默认宽度为父元素宽度，可设置宽高，换行显示。")])]),t._v(" "),e("tr",[e("td",[t._v("inline")]),t._v(" "),e("td",[t._v("行内严肃类型。默认宽度为内容宽度，不可设置宽高，同行显示。")])]),t._v(" "),e("tr",[e("td",[t._v("inline-block")]),t._v(" "),e("td",[t._v("默认宽度为内容宽度，可以设置宽高，同行显示。")])]),t._v(" "),e("tr",[e("td",[t._v("list-item")]),t._v(" "),e("td",[t._v("像块类型元素一样显示，并添加样式列表标记。")])]),t._v(" "),e("tr",[e("td",[t._v("table")]),t._v(" "),e("td",[t._v("此元素会作为块级表格来显示。")])]),t._v(" "),e("tr",[e("td",[t._v("inherit")]),t._v(" "),e("td",[t._v("规定应该从父元素继承 display 属性的值。")])])])]),t._v(" "),e("h2",{attrs:{id:"display-block-inline-inline-block-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display-block-inline-inline-block-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" display block inline inline-block 区别")]),t._v(" "),e("ol",[e("li",[t._v("block 独占一行，多个元素会另起一行，可以设置 width、height、margin 和 padding")]),t._v(" "),e("li",[t._v("inline 元素不会独占一行，设置 width、height 属性无效。但可以设置水平方向的 margin 和padding")]),t._v(" "),e("li",[t._v("inline-block 将对象设置为 inline 对象，但对象的内容作为 block 对象呈现，之后的內联对象会被排列在同一行内")])]),t._v(" "),e("h2",{attrs:{id:"行内元素和块级元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行内元素和块级元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 行内元素和块级元素")]),t._v(" "),e("h3",{attrs:{id:"行内元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行内元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 行内元素")]),t._v(" "),e("ul",[e("li",[t._v("设置宽高无效")]),t._v(" "),e("li",[t._v("可以设置水平方向的 margin 和 padding，不能设置垂直方向的 padding 和 margin")]),t._v(" "),e("li",[t._v("不会自动换行")])]),t._v(" "),e("h3",{attrs:{id:"快级元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快级元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 快级元素")]),t._v(" "),e("ul",[e("li",[t._v("可以设置宽高")]),t._v(" "),e("li",[t._v("设置 margin 和 padding 都有效")]),t._v(" "),e("li",[t._v("可以自动换行")]),t._v(" "),e("li",[t._v("多个块状，默认排列从上到下")])]),t._v(" "),e("h2",{attrs:{id:"隐藏元素方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐藏元素方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐藏元素方法")]),t._v(" "),e("ol",[e("li",[t._v("display: none 渲染树不会渲染该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件")]),t._v(" "),e("li",[t._v("visibility: hidden 元素在页面中仍占据空间，但是不会响应绑定的监听事件")]),t._v(" "),e("li",[t._v("opacity: 0 将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空间，并且能够响应元素绑定的监听事件")]),t._v(" "),e("li",[t._v("position: absolute 通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏")]),t._v(" "),e("li",[t._v("z-index: 来使其他元素遮盖住该元素，以此来实现隐藏")]),t._v(" "),e("li",[t._v("clip/clip-path 使用元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件")]),t._v(" "),e("li",[t._v("transform: scale(0,0) 将元素缩放为 0，来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件")])]),t._v(" "),e("h2",{attrs:{id:"display-none-visibility-hidden-opacity-0-三者区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display-none-visibility-hidden-opacity-0-三者区别","aria-hidden":"true"}},[t._v("#")]),t._v(" display:none,visibility:hidden,opacity:0 三者区别")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("display:none")]),t._v(" "),e("th",[t._v("visibility:hidden")]),t._v(" "),e("th",[t._v("opacity:0")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("是否占据页面空间")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("√")]),t._v(" "),e("td",[t._v("√")])]),t._v(" "),e("tr",[e("td",[t._v("对子元素影响")]),t._v(" "),e("td",[t._v("√")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("√")])]),t._v(" "),e("tr",[e("td",[t._v("自身绑定的事件能否继续触发")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("√")])]),t._v(" "),e("tr",[e("td",[t._v("是否影响其他元素触发事件（例如被遮挡的元素）")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("√")])]),t._v(" "),e("tr",[e("td",[t._v("是否产生回流（reflow）")]),t._v(" "),e("td",[t._v("√")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("是否产生重绘（repaint）")]),t._v(" "),e("td",[t._v("√")]),t._v(" "),e("td",[t._v("√")]),t._v(" "),e("td",[t._v("不一定")])])])]),t._v(" "),e("p",[t._v("元素提升为合成层后，transform 和 opacity 不会触发 repaint，如果不是合成层，则其依然会触发 repaint。在 Blink 和 WebKit 内核的浏览器中，对于应用了 transition 或者 animation 的 opacity 元素，浏览器会将渲染层提升为合成层。也可以使用 translateZ(0) 或者 translate3d(0,0,0) 来人为地强制性地创建一个合成层。")]),t._v(" "),e("p",[t._v("display:none 是非继承属性，子孙元素会随着父节点从渲染树消失，通过修改子孙节点的属性也无法显示\nvisibility:hidden 是继承属性，子孙节点消失是由于继承了 hidden，通过设置 visibility:visible 可以让子孙节点显示")]),t._v(" "),e("p",[t._v("如果使用读屏器，设置为 display:none 的内容不会被读取，设置为 visibility:hidden 的内容会被读取")]),t._v(" "),e("h2",{attrs:{id:"requestanimationframe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe","aria-hidden":"true"}},[t._v("#")]),t._v(" requestAnimationFrame")]),t._v(" "),e("p",[t._v("实现动画效果的方法比较多，Javascript 中可以通过定时器 setTimeout 来实现，CSS3 中可以使用 transition 和 animation 来实现，HTML5 中的 canvas 也可以实现。除此之外，HTML5 提供一个专门用于请求动画的 API，那就是 requestAnimationFrame，顾名思义就是请求动画帧。")]),t._v(" "),e("h3",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),e("p",[t._v("window.requestAnimationFrame(callback); 其中，callback 是下一次重绘之前更新动画帧所调用的函数(即上面所说的回调函数)。该回调函数会被传入 DOMHighResTimeStamp 参数，它表示 requestAnimationFrame() 开始去执行回调函数的时刻。该方法属于宏任务，所以会在执行完微任务之后再去执行。")]),t._v(" "),e("p",[t._v("使用 cancelAnimationFrame()来取消执行动画，该方法接收一个参数——requestAnimationFrame 默认返回的 id，只需要传入这个 id 就可以取消动画了。")]),t._v(" "),e("h3",{attrs:{id:"优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优势","aria-hidden":"true"}},[t._v("#")]),t._v(" 优势")]),t._v(" "),e("ul",[e("li",[t._v("CPU节能：使用 SetInterval 实现的动画，当页面被隐藏或最小化时，SetInterval 仍然在后台执行动画任务，由于此时页面处于不可见或不可用状态，刷新动画是没有意义的，完全是浪费 CPU 资源。而 RequestAnimationFrame 则完全不同，当页面处理未激活的状态下，该页面的屏幕刷新任务也会被系统暂停，因此跟着系统走的 RequestAnimationFrame 也会停止渲染，当页面被激活时，动画就从上次停留的地方继续执行，有效节省了 CPU 开销。")]),t._v(" "),e("li",[t._v("函数节流：在高频率事件( resize, scroll 等)中，为了防止在一个刷新间隔内发生多次函数执行，RequestAnimationFrame 可保证每个刷新间隔内，函数只被执行一次，这样既能保证流畅性，也能更好的节省函数执行的开销，一个刷新间隔内函数执行多次时没有意义的，因为多数显示器每 16.7ms 刷新一次，多次绘制并不会在屏幕上体现出来。")]),t._v(" "),e("li",[t._v("减少 DOM 操作：requestAnimationFrame 会把每一帧中的所有 DOM 操作集中起来，在一次重绘或回流中就完成，并且重绘或回流的时间间隔紧紧跟随浏览器的刷新频率，一般来说，这个频率为每秒 60 帧。")])]),t._v(" "),e("h2",{attrs:{id:"_1px-解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1px-解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 1px 解决方案")]),t._v(" "),e("h3",{attrs:{id:"形成原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#形成原因","aria-hidden":"true"}},[t._v("#")]),t._v(" 形成原因")]),t._v(" "),e("p",[t._v("我们知道，像素可以分为物理像素（CSS 像素）和设备像素。由于现在手机大部分是 Retina 高清屏幕，所以在 PC 端和移动端存在设备像素比的概念。简单说就是你在 pc 端看到的 1px 和在移动端看到的 1px 是不一样的。")]),t._v(" "),e("p",[t._v("在 PC 端上，像素可以称为 CSS 像素，PC 端上 dpr 为 1。也就说你书写 css 样式是是多少在 pc 上就显示多少。而在移动端上，像素通常使用设备像素。往往 PC 端和移动端上在不做处理的情况下 1px 显示是不同的。")]),t._v(" "),e("p",[t._v("一个物理像素等于多少个设备像素取决于移动设备的屏幕特性(是否是 Retina)和用户缩放比例。")]),t._v(" "),e("p",[t._v("如果是 Retina 高清屏幕，那么 dpr 的值可能为 2 或者 3，那么当你在 pc 端上看到的 1px 时，在移动端上看到的就会是 2px 或者 3px。")]),t._v(" "),e("p",[t._v("由于业务需求，我们需要一些方法来实现移动端上的 1px。")]),t._v(" "),e("h3",{attrs:{id:"border-image（不推荐）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#border-image（不推荐）","aria-hidden":"true"}},[t._v("#")]),t._v(" border-image（不推荐）")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border-image-1px")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token url"}},[t._v("url(linenew.png)")]),t._v(" 2 0 stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("缺点是修改起来很麻烦，需要替换图片")]),t._v(" "),e("h3",{attrs:{id:"transform-伪类（推荐）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transform-伪类（推荐）","aria-hidden":"true"}},[t._v("#")]),t._v(" transform 伪类（推荐）")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".setOnePx")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n  &::after")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #e5e5e5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0.5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"box-shadow（不推荐）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#box-shadow（不推荐）","aria-hidden":"true"}},[t._v("#")]),t._v(" box-shadow（不推荐）")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box-shadow-1px")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-shadow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inset 0px -1px 1px -1px #c8c7cc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("缺点是实现效果和边框还是有细微差异")]),t._v(" "),e("h3",{attrs:{id:"viewport-设置-scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#viewport-设置-scale","aria-hidden":"true"}},[t._v("#")]),t._v(" viewport 设置 scale")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" viewport "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"meta[name=viewport]"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面是根据设备像素设置viewport")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=device-width,initial-scale=0.5,maximum-scale=0.5,minimum-scale=0.5,user-scalable=no'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=device-width,initial-scale=0.333,maximum-scale=0.333,minimum-scale=0.333,user-scalable=no'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("这样解决了，但这样做的副作用也很大，整个页面被缩放了。这时 1px 已经被处理成物理像素大小，这样的大小在手机上显示边框很合适。但是，一些原本不需要被缩小的内容，比如文字、图片等，也被无差别缩小掉了。")]),t._v(" "),e("h3",{attrs:{id:"直接写-0-5px（兼容性不好）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#直接写-0-5px（兼容性不好）","aria-hidden":"true"}},[t._v("#")]),t._v(" 直接写 0.5px（兼容性不好）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div id="container" data-device={{window.devicePixelRatio}}></div>\n\n#container[data-device="2"] {\n  border:0.5px solid #333\n}\n')])])]),e("p",[t._v("直接把 1px 改成 1/devicePixelRatio 后的值，这是目前为止最简单的一种方法。这种方法的缺陷在于兼容性不行，IOS 系统需要 8 及以上的版本，安卓系统则直接不兼容。")]),t._v(" "),e("h2",{attrs:{id:"css-定位方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-定位方式","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 定位方式")]),t._v(" "),e("ul",[e("li",[t._v("static: 正常文档流定位，此时 top, right, bottom, left 和 z-index 属性无效，块级元素从上往下纵向排布，行级元素从左向右排列。")]),t._v(" "),e("li",[t._v("relative：相对定位，此时的『相对』是相对于正常文档流的位置。")]),t._v(" "),e("li",[t._v("absolute：相对于最近的非 static 定位祖先元素的偏移，来确定元素位置，比如一个绝对定位元素它的父级、和祖父级元素都为 relative，它会相对他的父级而产生偏移。")]),t._v(" "),e("li",[t._v("fixed：指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变，比如那种回到顶部的按钮一般都是用此定位方式。")]),t._v(" "),e("li",[t._v("sticky：粘性定位，特性近似于 relative 和 fixed 的合体，其在实际应用中的近似效果就是 IOS 通讯录滚动的时候的『顶屁股』。")])]),t._v(" "),e("h2",{attrs:{id:"层叠山下文与层叠顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠山下文与层叠顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 层叠山下文与层叠顺序")]),t._v(" "),e("h3",{attrs:{id:"层叠上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文","aria-hidden":"true"}},[t._v("#")]),t._v(" 层叠上下文")]),t._v(" "),e("p",[t._v("层叠上下文是 HTML 元素的三维概念，这些 HTML 元素在一条假想的相对于面向（电脑屏幕的）视窗或者网页的用户的 z 轴上延伸，HTML 元素依据其自身属性按照优先级顺序占用层叠上下文的空间。")]),t._v(" "),e("h4",{attrs:{id:"产生条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#产生条件","aria-hidden":"true"}},[t._v("#")]),t._v(" 产生条件")]),t._v(" "),e("ul",[e("li",[t._v("根元素 (HTML),")]),t._v(" "),e("li",[t._v('z-index 值不为 "auto"的 绝对/相对定位，')]),t._v(" "),e("li",[t._v('一个 z-index 值不为 "auto"的 flex 项目 (flex item)，即：父- 元素 display: flex|inline-flex，')]),t._v(" "),e("li",[t._v("opacity 属性值小于 1 的元素（参考 the specification for - opacity），")]),t._v(" "),e("li",[t._v('transform 属性值不为 "none"的元素，')]),t._v(" "),e("li",[t._v('mix-blend-mode 属性值不为 "normal"的元素，')]),t._v(" "),e("li",[t._v("filter 值不为“none”的元素，")]),t._v(" "),e("li",[t._v("perspective 值不为“none”的元素，")]),t._v(" "),e("li",[t._v('isolation 属性被设置为 "isolate"的元素，')]),t._v(" "),e("li",[t._v("position: fixed")]),t._v(" "),e("li",[t._v("在 will-change 中指定了任意 CSS 属性，即便你没有直接指定这些属性的值（参考 这篇文章）")]),t._v(" "),e("li",[t._v('-webkit-overflow-scrolling 属性被设置 "touch"的元素')])]),t._v(" "),e("h3",{attrs:{id:"层叠顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 层叠顺序")]),t._v(" "),e("p",[e("img",{attrs:{src:s(300),alt:"层叠顺序"}})]),t._v(" "),e("ul",[e("li",[t._v("诸如 border/background 一般为装饰属性")]),t._v(" "),e("li",[t._v("浮动和块状元素一般用作布局，")]),t._v(" "),e("li",[t._v("内联元素是内容")])]),t._v(" "),e("h4",{attrs:{id:"层叠顺序准则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠顺序准则","aria-hidden":"true"}},[t._v("#")]),t._v(" 层叠顺序准则")]),t._v(" "),e("ol",[e("li",[t._v("谁大谁上：当具有明显的层叠水平标示的时候，如识别的 z-indx 值，在同一个层叠上下文领域，层叠水平值大的那一个覆盖小的那一个。通俗讲就是官大的压死官小的。")]),t._v(" "),e("li",[t._v("后来居上：当元素的层叠水平一致、层叠顺序相同的时候，在 DOM 流中处于后面的元素会覆盖前面的元素。")])]),t._v(" "),e("h3",{attrs:{id:"参考文献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),e("ul",[e("li",[t._v("深入理解 CSS 中的层叠上下文和层叠顺序："),e("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),e("p",[t._v("当对一个文档进行布局（lay out）的时候，浏览器的渲染引擎会根据标准之一的 CSS 基础框盒模型（CSS basic box model），将所有元素表示为一个个矩形的盒子（box）。CSS 决定这些盒子的大小、位置以及属性（例如颜色、背景、边框尺寸…）。")]),t._v(" "),e("p",[t._v("盒模型由 content（内容）、padding（内边距）、border（边框）、margin（外边距）组成。")]),t._v(" "),e("h3",{attrs:{id:"标准盒模型和怪异盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型和怪异盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准盒模型和怪异盒模型")]),t._v(" "),e("p",[t._v("在 W3C 标准下，我们定义元素的 width 值即为盒模型中的 content 的宽度值，height 值即为盒模型中的 content 的高度值")]),t._v(" "),e("p",[t._v("而 IE 怪异盒模型（IE8 以下）width 的宽度并不是 content 的宽度，而是 border-left + padding-left + content 的宽度值 + padding-right + border-right 之和，height 同理。")]),t._v(" "),e("h3",{attrs:{id:"box-sizing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing","aria-hidden":"true"}},[t._v("#")]),t._v(" box-sizing")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box // 标准盒模型\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box // 怪异盒模型\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" padding-box // 火狐的私有模型，没人用\n")])])]),e("h2",{attrs:{id:"去除-inline-block-元素间间距的-n-种方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#去除-inline-block-元素间间距的-n-种方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 去除 inline-block 元素间间距的 N 种方法")]),t._v(" "),e("blockquote",[e("p",[t._v("真正意义上的 inline-block 水平呈现的元素间，换行显示或空格分隔的情况下会有间距")])]),t._v(" "),e("h3",{attrs:{id:"移除空格"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移除空格","aria-hidden":"true"}},[t._v("#")]),t._v(" 移除空格")]),t._v(" "),e("p",[t._v("元素间留白间距出现的原因就是标签段之间的空格，因此，去掉 HTML 中的空格，自然间距就木有了。考虑到代码可读性，显然连成一行的写法是不可取的，我们可以：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("space"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("##"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 惆怅"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("##"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 淡定"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("##"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 热血"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"使用-margin-负值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-margin-负值","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 margin 负值")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -3px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"使用-font-size-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-font-size-0","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 font-size:0")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"使用-letter-spacing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-letter-spacing","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 letter-spacing")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("letter-spacing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -3px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("letter-spacing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"使用-word-spacing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-word-spacing","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 word-spacing")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-spacing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -6px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".space a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-spacing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"元素底部为何有空白"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素底部为何有空白","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("img"),t._v("元素底部为何有空白")]),t._v(" "),e("p",[t._v("要理解这个问题，首先要弄明白 CSS 对于 display: inline 元素的 vertical-align 各个值的含义。vertical-align 的默认值是 baseline")]),t._v(" "),e("p",[e("img",{attrs:{src:s(301),alt:"img_bsaeline"}})]),t._v(" "),e("p",[t._v("可以看到，baseline 和 bottom 之间有一定的距离。实际上，inline 的图片下面那一道空白正是 baseline 和 bottom 之间的这段距离。即使只有图片没有文字，只要是 inline 的图片这段空白都会存在。")]),t._v(" "),e("p",[t._v("到这里就比较明显了，要去掉这段空白，最直接的办法是将图片的 vertical-align 设置为其他值。如果在同一行里有文字混排的话，那应该是用 bottom 或是 middle 比较好。")]),t._v(" "),e("p",[t._v("另外，top 和 bottom 之间的值即为 line-height。假如把 line-height 设置为 0，那么 baseline 与 bottom 之间的距离也变为 0，那道空白也就不见了。如果没有设置 line-height，line-height 的默认值是基于 font-size 的，视渲染引擎有所不同，但一般是乘以一个系数（比如 1.2）。因此，在没有设置 line-height 的情况下把 font-size 设为 0 也可以达到同样的效果。当然，这样做的后果就是不能图文混排了。")]),t._v(" "),e("h3",{attrs:{id:"参考文献-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),e("ul",[e("li",[e("img"),t._v("元素底部为何有空白？："),e("a",{attrs:{href:"https://www.zhihu.com/question/21558138",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zhihu.com/question/21558138"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"可替换元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可替换元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 可替换元素")]),t._v(" "),e("blockquote",[e("p",[t._v("在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。")])]),t._v(" "),e("p",[t._v("典型的可替换元素有：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<iframe>")])]),t._v(" "),e("li",[e("code",[t._v("<video>")])]),t._v(" "),e("li",[e("code",[t._v("<embed>")])]),t._v(" "),e("li",[e("code",[t._v("<img>")]),t._v(" *")])]),t._v(" "),e("p",[t._v("有些元素仅在特定情况下被作为可替换元素处理，例如：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<option>")])]),t._v(" "),e("li",[e("code",[t._v("<audio>")])]),t._v(" "),e("li",[e("code",[t._v("<canvas>")])]),t._v(" "),e("li",[e("code",[t._v("<object>")])]),t._v(" "),e("li",[e("code",[t._v("<applet>")])])]),t._v(" "),e("p",[t._v("HTML 规范也说了 "),e("code",[t._v("<input>")]),t._v(' 元素可替换，因为 "image" 类型的 '),e("code",[t._v("<input>")]),t._v(" 元素就像 "),e("code",[t._v("<img>")]),t._v(" 一样被替换。但是其他形式的控制元素，包括其他类型的 "),e("code",[t._v("<input>")]),t._v(" 元素，被明确地列为非可替换元素（non-replaced elements）。该规范用术语小挂件（Widgets）来描述它们默认的限定平台的渲染行为。")]),t._v(" "),e("h2",{attrs:{id:"画-0-5px-的线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画-0-5px-的线","aria-hidden":"true"}},[t._v("#")]),t._v(" 画 0.5px 的线")]),t._v(" "),e("ul",[e("li",[t._v("采用 transform: scale()的方式，该方法用来定义元素的 2D 缩放转换：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("transform: scale(0.5,0.5);\n")])])]),e("ul",[e("li",[t._v("采用 meta viewport 的方式")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="width=device-width, initial-scale=0.5, minimum-scale=0.5, maximum-scale=0.5"/>\n')])])]),e("p",[t._v("这样就能缩放到原来的 0.5 倍，如果是 1px 那么就会变成 0.5px。viewport 只针对于移动端，只在移动端上才能看到效果")]),t._v(" "),e("h2",{attrs:{id:"设置小雨-12px-的字体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置小雨-12px-的字体","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置小雨 12px 的字体")]),t._v(" "),e("p",[t._v("在谷歌下 css 设置字体大小为 12px 及以下时，显示都是一样大小，都是默认 12px。")]),t._v(" "),e("h3",{attrs:{id:"解决办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决办法","aria-hidden":"true"}},[t._v("#")]),t._v(" 解决办法")]),t._v(" "),e("ul",[e("li",[t._v("使用 Webkit 的内核的-webkit-text-size-adjust 的私有 CSS 属性来解决，只要加了-webkit-text-size-adjust:none;字体大小就不受限制了。但是 chrome 更新到 27 版本之后就不可以用了。所以高版本 chrome 谷歌浏览器已经不再支持-webkit-text-size-adjust 样式，所以要使用时候慎用。")]),t._v(" "),e("li",[t._v("使用 css3 的 transform 缩放属性-webkit-transform:scale(0.5); 注意-webkit-transform:scale(0.75);收缩的是整个元素的大小，这时候，如果是内联元素，必须要将内联元素转换成块元素，可以使用 display：block/inline-block/...；")]),t._v(" "),e("li",[t._v("使用图片：如果是内容固定不变情况下，使用将小于 12px 文字内容切出做图片，这样不影响兼容也不影响美观。")])]),t._v(" "),e("h2",{attrs:{id:"如何重置元素的属性值到初始值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何重置元素的属性值到初始值","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何重置元素的属性值到初始值")]),t._v(" "),e("blockquote",[e("p",[t._v("张鑫旭："),e("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2020/01/css-initial-unset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS inherit是继承，那initial和unset呢"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("MDN："),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/all",target:"_blank",rel:"noopener noreferrer"}},[t._v("all"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("全局属性值")]),t._v(" "),e("ul",[e("li",[t._v("initial 该关键字代表改变该元素或其父元素的所有属性至初始值")]),t._v(" "),e("li",[t._v("inherit 该关键字代表改变该元素或其父元素的所有属性的值至他们的父元素属性的值")]),t._v(" "),e("li",[t._v("unset 该关键字代表如果该元素的属性的值是可继承的，则改变该元素或该元素的父元素的所有属性的值为他们父元素的属性值，反之则改变为初始值")]),t._v(" "),e("li",[t._v("revert 在许多情况下，revert 关键字的工作方式与 unset 完全相同。唯一的区别是，属性的值是由浏览器设置的，或者由用户创建的自定义样式表设置的(设置在浏览器端)")])]),t._v(" "),e("p",[t._v("全局设置属性 all")]),t._v(" "),e("p",[t._v("all 属性被作为 CSS 全局关键词的其中之一. 除却 unicode-bidi 与 direction 之外的所有属性重设至其初始值，或继承值。")])])},[],!1,null,null,null);a.default=n.exports}}]);