(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{394:function(a,t,r){"use strict";r.r(t);var e=r(19),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"了不起的node-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#了不起的node-js","aria-hidden":"true"}},[a._v("#")]),a._v(" 了不起的Node.js")]),a._v(" "),r("h2",{attrs:{id:"_1-安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 1 安装")]),a._v(" "),r("h3",{attrs:{id:"_1-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.1")]),a._v(" "),r("p",[a._v("npm search 根据name/tags/description搜索模块")]),a._v(" "),r("p",[a._v("npm view 查看模块相关属性")]),a._v(" "),r("h2",{attrs:{id:"_2-javascript概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript概览","aria-hidden":"true"}},[a._v("#")]),a._v(" 2 JavaScript概览")]),a._v(" "),r("h2",{attrs:{id:"_3-阻塞与非阻塞io"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-阻塞与非阻塞io","aria-hidden":"true"}},[a._v("#")]),a._v(" 3 阻塞与非阻塞IO")]),a._v(" "),r("h3",{attrs:{id:"堆栈追踪"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈追踪","aria-hidden":"true"}},[a._v("#")]),a._v(" 堆栈追踪")]),a._v(" "),r("p",[a._v("要捕获一个未来才会执行到的函数所抛出的错误是不可能的。这会直接抛出未捕获的一场，并且catch代码块永远都不会被执行")]),a._v(" "),r("h2",{attrs:{id:"_4-node中的javascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-node中的javascript","aria-hidden":"true"}},[a._v("#")]),a._v(" 4 Node中的JavaScript")]),a._v(" "),r("h3",{attrs:{id:"global对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#global对象","aria-hidden":"true"}},[a._v("#")]),a._v(" global对象")]),a._v(" "),r("p",[a._v("在浏览器中，全局对象指的就是window对象。在window对象上定义的任何内容都可以被全局访问到。")]),a._v(" "),r("p",[a._v("Node中有两个类似但却各自代表着不同含义的对象")]),a._v(" "),r("ul",[r("li",[a._v("global: 和window一样，任何global对象上的属性都可以被全局访问到")]),a._v(" "),r("li",[a._v("process: 所有全局执行上下文中的内容都在process对象中")])]),a._v(" "),r("h2",{attrs:{id:"_5命令行工具（cli）以及fs-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5命令行工具（cli）以及fs-api","aria-hidden":"true"}},[a._v("#")]),a._v(" 5命令行工具（CLI）以及FS API")]),a._v(" "),r("h3",{attrs:{id:"创建模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建模块")]),a._v(" "),r("p",[a._v("npm最寻一个名为semver的版本控制标准")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://semver.org/"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"理解什么是流（stream）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#理解什么是流（stream）","aria-hidden":"true"}},[a._v("#")]),a._v(" 理解什么是流（stream）")]),a._v(" "),r("p",[a._v("process全局对象中包含了三个流对象，分别对应三个UNIX标准流:")]),a._v(" "),r("ul",[r("li",[a._v("stdin 标准输入")]),a._v(" "),r("li",[a._v("stdout 标准输出")]),a._v(" "),r("li",[a._v("stderr 标准错误")])]),a._v(" "),r("p",[a._v("流的另一个属性是它默认的编码。如果在流上设置了编码，那么会得到编码后的字符串（utf-8、ascii等）而不是原始的Buffer作为事件参数")]),a._v(" "),r("h4",{attrs:{id:"输入和输出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#输入和输出","aria-hidden":"true"}},[a._v("#")]),a._v(" 输入和输出")]),a._v(" "),r("p",[a._v("process.stdout.write()\nprocess.stdin.resume()\nprocess.stdin.setEncoding('utf8')")]),a._v(" "),r("h4",{attrs:{id:"对cli一探究竟"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对cli一探究竟","aria-hidden":"true"}},[a._v("#")]),a._v(" 对CLI一探究竟")]),a._v(" "),r("p",[a._v("process.argv包含了所有Node程序运行时的参数值")]),a._v(" "),r("p",[a._v("第一个元素始终是node，第二个元素始终是执行的文件路径。紧接着是命令行后紧跟着的参数")]),a._v(" "),r("h4",{attrs:{id:"工作目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工作目录","aria-hidden":"true"}},[a._v("#")]),a._v(" 工作目录")]),a._v(" "),r("p",[a._v("__dirname 获取执行文件时该文件在文件系统中所在的目录")]),a._v(" "),r("p",[a._v("process.cwd 获取当前工作目录")]),a._v(" "),r("p",[a._v("process.chdir 更改工作目录")]),a._v(" "),r("h4",{attrs:{id:"环境变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#环境变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 环境变量")]),a._v(" "),r("p",[a._v("Node允许通过process.env变量来轻松访问shell环境下的变量")]),a._v(" "),r("h4",{attrs:{id:"退出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#退出","aria-hidden":"true"}},[a._v("#")]),a._v(" 退出")]),a._v(" "),r("p",[a._v("process.exit 使应用退出")]),a._v(" "),r("h4",{attrs:{id:"ansi转义码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ansi转义码","aria-hidden":"true"}},[a._v("#")]),a._v(" ANSI转义码")]),a._v(" "),r("p",[a._v("要在文本终端下控制格式、颜色以及其他输出选项，可以使用ANSI转义码\n在文本周围添加的明显不用于输出的字符，被称为非打印字符")]),a._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[a._v("console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\033[90m'")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[a._v("replace")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("g"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'   $1'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\033[39m'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),r("ul",[r("li",[a._v("\\033 表示转义序列的卡是")]),a._v(" "),r("li",[a._v("[表示开始颜色设置")]),a._v(" "),r("li",[a._v("90表示前景色为亮灰色")]),a._v(" "),r("li",[a._v("m表示颜色设置结束")])]),a._v(" "),r("h2",{attrs:{id:"tcp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp","aria-hidden":"true"}},[a._v("#")]),a._v(" TCP")]),a._v(" "),r("p",[a._v("传输控制协议（TCP）是一个面向连接的协议，它保证了两台计算机之间数据传输的可靠性和顺序")]),a._v(" "),r("p",[a._v("Node HTTP服务器是构建与Node TCP服务器之上的。从变成角度来说，也就是Node中的http.Server继承自net.Server(net是TCP模块)")]),a._v(" "),r("h3",{attrs:{id:"tcp有哪些特征"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp有哪些特征","aria-hidden":"true"}},[a._v("#")]),a._v(" TCP有哪些特征")]),a._v(" "),r("h4",{attrs:{id:"面向连接的通信和保证顺序的传递"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面向连接的通信和保证顺序的传递","aria-hidden":"true"}},[a._v("#")]),a._v(" 面向连接的通信和保证顺序的传递")]),a._v(" "),r("p",[a._v("IP是基于数据报的传输。这些数据报时独立进行传输的，送达的顺序也是无序的")]),a._v(" "),r("p",[a._v("当在TCP连接内进行数据传递时，发送的IP数据包包含了标识该连接以及数据流顺序的信息")]),a._v(" "),r("h4",{attrs:{id:"面向字节"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面向字节","aria-hidden":"true"}},[a._v("#")]),a._v(" 面向字节")]),a._v(" "),r("p",[a._v("TCP对字符以及字符编码是完全无知的，不同的编码会导致传输的字节数不同，所以，TCP允许数据以ASCII字符（每个字符一个字节）或者Unicode（每个字符四个字节）进行传输。")]),a._v(" "),r("p",[a._v("正因为对消息格式没有严格的约束，使得TCP有很好的灵活性")]),a._v(" "),r("h4",{attrs:{id:"可靠性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可靠性","aria-hidden":"true"}},[a._v("#")]),a._v(" 可靠性")]),a._v(" "),r("p",[a._v("由于TCP时基于底层不可靠的服务，因此，它必须要基于确认和超时实现一系列的机制来达到可靠性的要求")]),a._v(" "),r("p",[a._v("当数据发送出去后，发送方就会等待一个确认消息。如果过了指定的窗口事件，还未收到确认消息，发送方就会对数据进行重发")]),a._v(" "),r("h4",{attrs:{id:"流控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 流控制")]),a._v(" "),r("p",[a._v("TCP通过一种叫流控制的方式来确保两点之间传输数据的平衡")]),a._v(" "),r("h4",{attrs:{id:"拥堵控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拥堵控制","aria-hidden":"true"}},[a._v("#")]),a._v(" 拥堵控制")]),a._v(" "),r("h4",{attrs:{id:"telnet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#telnet","aria-hidden":"true"}},[a._v("#")]),a._v(" Telnet")]),a._v(" "),r("p",[a._v("Telnet是一个早期的网络协议，旨在提供双向的虚拟终端。在SSH出现前，它作为一种控制远程计算机的方式被广泛使用，如远程服务器管理。它是TCP协议上层的协议")]),a._v(" "),r("h2",{attrs:{id:"http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP")]),a._v(" "),r("p",[a._v("超文本传输协议")]),a._v(" "),r("h3",{attrs:{id:"头信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#头信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 头信息")]),a._v(" "),r("h3",{attrs:{id:"连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 连接")]),a._v(" "),r("h2",{attrs:{id:"_8-connect"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-connect","aria-hidden":"true"}},[a._v("#")]),a._v(" 8 Connect")]),a._v(" "),r("p",[a._v("Connect是一个基于HTTP服务器的工具集，它提供了一种新的组织代码的方式来与请求、相应对象进行交互，称为中间件")]),a._v(" "),r("p",[a._v("简单来哦说，中间件由幻术组成，它除了处理req和res对象外，还接受一个next函数来做流控制")]),a._v(" "),r("h3",{attrs:{id:"static中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#static中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" static中间件")]),a._v(" "),r("p",[a._v("Connect允许中间件挂载到URL上。比如。static允许将任意一个URL匹配到文件系统中任意一个目录")]),a._v(" "),r("h3",{attrs:{id:"query中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#query中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" query中间件")]),a._v(" "),r("p",[a._v("使用query中间件，就能够通过req.query对象自动获取查询字符串数据")]),a._v(" "),r("h3",{attrs:{id:"logger中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#logger中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" logger中间件")]),a._v(" "),r("p",[a._v("logger中间件是一个对Web应用非常有用的诊断工具。它将发送过来的请求信息和发送出去的相应信息打印在终端")]),a._v(" "),r("p",[a._v("提供四种日志格式")]),a._v(" "),r("ul",[r("li",[a._v("default")]),a._v(" "),r("li",[a._v("dev")]),a._v(" "),r("li",[a._v("short")]),a._v(" "),r("li",[a._v("tiny")])]),a._v(" "),r("p",[a._v("logger中间允许自定义日志输出格式")]),a._v(" "),r("p",[a._v("下面是完整的可用token")]),a._v(" "),r("ul",[r("li",[a._v("：req[header]")]),a._v(" "),r("li",[a._v(":res[header]")]),a._v(" "),r("li",[a._v(":http-version")]),a._v(" "),r("li",[a._v("response-time")]),a._v(" "),r("li",[a._v("remote-addr")]),a._v(" "),r("li",[a._v("date")]),a._v(" "),r("li",[a._v("method")]),a._v(" "),r("li",[a._v("url")]),a._v(" "),r("li",[a._v("referrer")]),a._v(" "),r("li",[a._v("user-agent")]),a._v(" "),r("li",[a._v("status")])]),a._v(" "),r("h3",{attrs:{id:"body-parser中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#body-parser中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" body parser中间件")]),a._v(" "),r("h3",{attrs:{id:"cookie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cookie","aria-hidden":"true"}},[a._v("#")]),a._v(" cookie")]),a._v(" "),r("h3",{attrs:{id:"session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#session","aria-hidden":"true"}},[a._v("#")]),a._v(" session")]),a._v(" "),r("h3",{attrs:{id:"redis-session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis-session","aria-hidden":"true"}},[a._v("#")]),a._v(" redis session")]),a._v(" "),r("p",[a._v("生产环境中，需要使用一种当应用重启后，还能够将session信息持久化存储下来的机制，如Redis")]),a._v(" "),r("h3",{attrs:{id:"methodoverride中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methodoverride中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" methodOverride中间件")]),a._v(" "),r("h3",{attrs:{id:"basicauth中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#basicauth中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" basicAuth中间件")]),a._v(" "),r("h2",{attrs:{id:"_9-express"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-express","aria-hidden":"true"}},[a._v("#")]),a._v(" 9 Express")]),a._v(" "),r("p",[a._v("鉴于Connect基于HTTP模块提供了开发Web应用的常用的基础功能，Express基于Connect为个构建整个网站以及Web应用提供了更为方便的API")]),a._v(" "),r("h2",{attrs:{id:"_10-websocket"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-websocket","aria-hidden":"true"}},[a._v("#")]),a._v(" 10 WebSocket")]),a._v(" "),r("h2",{attrs:{id:"_11-socket-io"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-socket-io","aria-hidden":"true"}},[a._v("#")]),a._v(" 11 Socket.IO")]),a._v(" "),r("h3",{attrs:{id:"传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传输","aria-hidden":"true"}},[a._v("#")]),a._v(" 传输")]),a._v(" "),r("p",[a._v("Socket.IO最诱人的特性之一就是消息的传递时基于传输的，而非全部依靠WebSocket，也就是说，Socket.IO可以在绝大部分的浏览器和设备上运行")]),a._v(" "),r("h3",{attrs:{id:"断开vs关闭"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#断开vs关闭","aria-hidden":"true"}},[a._v("#")]),a._v(" 断开VS关闭")]),a._v(" "),r("p",[a._v("Socket.IO带来的另一个基础功能就是对超时的支持")]),a._v(" "),r("h3",{attrs:{id:"事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[a._v("#")]),a._v(" 事件")]),a._v(" "),r("h3",{attrs:{id:"命名空间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命名空间","aria-hidden":"true"}},[a._v("#")]),a._v(" 命名空间")]),a._v(" "),r("p",[a._v("Socket.IO还提供了另一个强大的特性，它允许在单个连接中利用命名空间来将消息区分开来")]),a._v(" "),r("h3",{attrs:{id:"事件和广播"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件和广播","aria-hidden":"true"}},[a._v("#")]),a._v(" 事件和广播")]),a._v(" "),r("h2",{attrs:{id:"_12-mongodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-mongodb","aria-hidden":"true"}},[a._v("#")]),a._v(" 12 MongoDB")]),a._v(" "),r("h2",{attrs:{id:"_13-mysql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-mysql","aria-hidden":"true"}},[a._v("#")]),a._v(" 13 MySql")]),a._v(" "),r("h2",{attrs:{id:"redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis","aria-hidden":"true"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),r("p",[a._v("支持数据类型")]),a._v(" "),r("ul",[r("li",[a._v("字符串（String）")]),a._v(" "),r("li",[a._v("列表（list）")]),a._v(" "),r("li",[a._v("数据集（set）")]),a._v(" "),r("li",[a._v("哈希（hash）")]),a._v(" "),r("li",[a._v("有序数据集（sorted set）")])]),a._v(" "),r("h3",{attrs:{id:"_15-代码共享"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-代码共享","aria-hidden":"true"}},[a._v("#")]),a._v(" 15 代码共享")]),a._v(" "),r("h3",{attrs:{id:"_16-测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-测试","aria-hidden":"true"}},[a._v("#")]),a._v(" 16 测试")])])},[],!1,null,null,null);t.default=s.exports}}]);